version: 2

.job_template: &job_template
  docker:
    - image: thepihole/ftl-build:$CIRCLE_JOB
  steps:
    - checkout
    - run:
        name: "Setup"
        command: |
          make clean
    - run:
        name: "Build"
        command: |
          make CFLAGS="${CFLAGS}" GIT_BRANCH="${CIRCLE_BRANCH}" GIT_TAG="${CIRCLE_TAG}"
          file pihole-FTL
    - run:
        name: "Upload"
        command: |
          mv pihole-FTL "${BIN_NAME}"
          sha1sum pihole-FTL-* > ${BIN_NAME}.sha1
          wget https://ftl.pi-hole.net:8080/FTL-client
          chmod +x ./FTL-client
          [[ "$CIRCLE_PR_NUMBER" == "" ]] && ./FTL-client "${CIRCLE_BRANCH}" "${BIN_NAME}" "${FTL_SECRET}"
          [[ "$CIRCLE_PR_NUMBER" == "" ]] && ./FTL-client "${CIRCLE_BRANCH}" "${BIN_NAME}.sha1" "${FTL_SECRET}"
          rm ./FTL-client
          ls -lah .

jobs:
  arm-test:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabi"

  armhf:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-arm-linux-gnueabihf"

  aarch64:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-aarch64-linux-gnu"

  x86_64:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_64"

  x86_64-musl:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-musl-linux-x86_64"

  x86_32:
    <<: *job_template
    environment:
      BIN_NAME: "pihole-FTL-linux-x86_32"
      CFLAGS: "-m32"

workflows:
  version: 2
  build:
    jobs:
      - arm-test
      - armhf
      - aarch64
      - x86_64
#      - x86_64-musl
      - x86_32
